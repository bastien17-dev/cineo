{"ast":null,"code":"var _jsxFileName = \"/Users/bastpaq/Documents/semaines-intensives/cineo/cineo/src/components/player/contoller/progress-bar/progressBar.component.jsx\";\nimport React from 'react';\nimport { createRef } from 'react';\nimport { PlayerContextConsumer } from '../../player.context';\nexport default class ProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTime = time => {\n      let minutes;\n      let seconds;\n\n      if (time < 60) {\n        seconds = time >= 10 ? time.toString() : `0${time.toString()}`;\n        minutes = '00';\n      } else if (time >= 60) {\n        let calculMinutes = Math.floor(time / 60);\n        let calculSeconds = time - 60 * calculMinutes;\n        seconds = calculSeconds >= 10 ? calculSeconds.toString() : `0${calculSeconds.toString()}`;\n        minutes = calculMinutes >= 10 ? calculMinutes.toString() : `0${calculMinutes.toString()}`;\n      }\n\n      return `${minutes}:${seconds}`;\n    };\n\n    this.progressBarEvolution = () => {\n      let video = this.state.video;\n\n      if (video.current) {\n        this.progressBarRef.current.value = video.current.currentTime * 100 / video.current.duration;\n        this.timeIndicationRef.current.innerHTML = this.setTime(Math.floor(video.current.currentTime));\n      }\n    };\n\n    this.handelClick = (e, setup, isFullScreen) => {\n      let videoContainerLeft = isFullScreen ? 0 : this.state.videoContainerElt.current.offsetLeft;\n      let videoElt = this.state.video.current;\n      let progressBarWidth = this.progressBarRef.current.offsetWidth;\n      let progressBarContainerOffsetLeft = this.progressBarContainerRef.current.offsetLeft;\n      let mousePosition = e.clientX - (progressBarContainerOffsetLeft + this.state.controlerRef.current.offsetLeft + videoContainerLeft);\n      this.progressBarRef.current.value = mousePosition * 100 / progressBarWidth;\n      videoElt.currentTime = videoElt.duration * this.progressBarRef.current.value / 100;\n      console.log(isFullScreen);\n    };\n\n    this.handelMove = (e, setup, isFullScreen) => {\n      let videoContainerLeft = isFullScreen ? 0 : this.state.videoContainerElt.current.offsetLeft;\n      let videoElt = this.state.video.current;\n      let progressBarWidth = this.progressBarRef.current.offsetWidth;\n      let progressBarContainerOffsetLeft = this.progressBarContainerRef.current.offsetLeft;\n      let mousePosition = e.clientX - (progressBarContainerOffsetLeft + this.state.controlerRef.current.offsetLeft + videoContainerLeft);\n      let effectiveTimeProgression = Math.floor(videoElt.duration * mousePosition / progressBarWidth);\n      this.infosRef.current.style.left = `${mousePosition}px`;\n      this.infosTimeRef.current.innerHTML = this.setTime(effectiveTimeProgression);\n      this.infosVideoRef.current.currentTime = this.infosVideoRef.current.duration * mousePosition / progressBarWidth;\n    };\n\n    this.state = {\n      videoContainerElt: this.props.videoContainer,\n      videoSrc: this.props.source,\n      video: this.props.video,\n      controlerRef: this.props.controler\n    };\n    this.progressBarContainerRef = createRef();\n    this.progressBarRef = createRef();\n    this.infosRef = createRef();\n    this.infosTimeRef = createRef();\n    this.infosVideoRef = createRef();\n    this.timeIndicationRef = createRef();\n  }\n\n  render() {\n    const {\n      videoSrc\n    } = this.state;\n    this.progressBarEvolution();\n    return /*#__PURE__*/React.createElement(PlayerContextConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, ({\n      isVideoFullScreen\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controler__progress-bar progress-bar\",\n      ref: this.progressBarContainerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar__infos infos\",\n      ref: this.infosRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      className: \"infos__video\",\n      src: videoSrc,\n      ref: this.infosVideoRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"infos__time\",\n      ref: this.infosTimeRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"progress\", {\n      className: \"progress-bar__bar\",\n      value: \"0\",\n      max: \"100\",\n      ref: this.progressBarRef,\n      onClick: e => this.handelClick(e, e.nativeEvent.offsetX, isVideoFullScreen),\n      onMouseMove: e => this.handelMove(e, e.nativeEvent.offsetX, isVideoFullScreen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar__time--indication\",\n      ref: this.timeIndicationRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"00:00\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/bastpaq/Documents/semaines-intensives/cineo/cineo/src/components/player/contoller/progress-bar/progressBar.component.jsx"],"names":["React","createRef","PlayerContextConsumer","ProgressBar","Component","constructor","props","setTime","time","minutes","seconds","toString","calculMinutes","Math","floor","calculSeconds","progressBarEvolution","video","state","current","progressBarRef","value","currentTime","duration","timeIndicationRef","innerHTML","handelClick","e","setup","isFullScreen","videoContainerLeft","videoContainerElt","offsetLeft","videoElt","progressBarWidth","offsetWidth","progressBarContainerOffsetLeft","progressBarContainerRef","mousePosition","clientX","controlerRef","console","log","handelMove","effectiveTimeProgression","infosRef","style","left","infosTimeRef","infosVideoRef","videoContainer","videoSrc","source","controler","render","isVideoFullScreen","nativeEvent","offsetX"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createRef } from 'react';\nimport { PlayerContextConsumer } from '../../player.context';\n\nexport default class ProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoContainerElt: this.props.videoContainer,\n      videoSrc: this.props.source,\n      video: this.props.video,\n      controlerRef: this.props.controler,\n    };\n    this.progressBarContainerRef = createRef();\n    this.progressBarRef = createRef();\n    this.infosRef = createRef();\n    this.infosTimeRef = createRef();\n    this.infosVideoRef = createRef();\n    this.timeIndicationRef = createRef();\n  }\n\n  setTime = (time) => {\n    let minutes;\n    let seconds;\n    if (time < 60) {\n      seconds = time >= 10 ? time.toString() : `0${time.toString()}`;\n      minutes = '00';\n    } else if (time >= 60) {\n      let calculMinutes = Math.floor(time / 60);\n      let calculSeconds = time - 60 * calculMinutes;\n      seconds =\n        calculSeconds >= 10\n          ? calculSeconds.toString()\n          : `0${calculSeconds.toString()}`;\n      minutes =\n        calculMinutes >= 10\n          ? calculMinutes.toString()\n          : `0${calculMinutes.toString()}`;\n    }\n    return `${minutes}:${seconds}`;\n  };\n\n  progressBarEvolution = () => {\n    let video = this.state.video;\n    if (video.current) {\n      this.progressBarRef.current.value =\n        (video.current.currentTime * 100) / video.current.duration;\n      this.timeIndicationRef.current.innerHTML = this.setTime(\n        Math.floor(video.current.currentTime)\n      );\n    }\n  };\n\n  handelClick = (e, setup, isFullScreen) => {\n    let videoContainerLeft = isFullScreen\n      ? 0\n      : this.state.videoContainerElt.current.offsetLeft;\n    let videoElt = this.state.video.current;\n    let progressBarWidth = this.progressBarRef.current.offsetWidth;\n    let progressBarContainerOffsetLeft = this.progressBarContainerRef.current\n      .offsetLeft;\n    let mousePosition =\n      e.clientX -\n      (progressBarContainerOffsetLeft +\n        this.state.controlerRef.current.offsetLeft +\n        videoContainerLeft);\n    this.progressBarRef.current.value =\n      (mousePosition * 100) / progressBarWidth;\n    videoElt.currentTime =\n      (videoElt.duration * this.progressBarRef.current.value) / 100;\n    console.log(isFullScreen);\n  };\n\n  handelMove = (e, setup, isFullScreen) => {\n    let videoContainerLeft = isFullScreen\n      ? 0\n      : this.state.videoContainerElt.current.offsetLeft;\n    let videoElt = this.state.video.current;\n    let progressBarWidth = this.progressBarRef.current.offsetWidth;\n    let progressBarContainerOffsetLeft = this.progressBarContainerRef.current\n      .offsetLeft;\n    let mousePosition =\n      e.clientX -\n      (progressBarContainerOffsetLeft +\n        this.state.controlerRef.current.offsetLeft +\n        videoContainerLeft);\n    let effectiveTimeProgression = Math.floor(\n      (videoElt.duration * mousePosition) / progressBarWidth\n    );\n    this.infosRef.current.style.left = `${mousePosition}px`;\n    this.infosTimeRef.current.innerHTML = this.setTime(\n      effectiveTimeProgression\n    );\n    this.infosVideoRef.current.currentTime =\n      (this.infosVideoRef.current.duration * mousePosition) / progressBarWidth;\n  };\n\n  render() {\n    const { videoSrc } = this.state;\n\n    this.progressBarEvolution();\n\n    return (\n      <PlayerContextConsumer>\n        {({ isVideoFullScreen }) => (\n          <div\n            className='controler__progress-bar progress-bar'\n            ref={this.progressBarContainerRef}\n          >\n            <div className='progress-bar__infos infos' ref={this.infosRef}>\n              <video\n                className='infos__video'\n                src={videoSrc}\n                ref={this.infosVideoRef}\n              ></video>\n              <div className='infos__time' ref={this.infosTimeRef}></div>\n            </div>\n            <progress\n              className='progress-bar__bar'\n              value='0'\n              max='100'\n              ref={this.progressBarRef}\n              onClick={(e) =>\n                this.handelClick(e, e.nativeEvent.offsetX, isVideoFullScreen)\n              }\n              onMouseMove={(e) =>\n                this.handelMove(e, e.nativeEvent.offsetX, isVideoFullScreen)\n              }\n            ></progress>\n            <div\n              className='progress-bar__time--indication'\n              ref={this.timeIndicationRef}\n            >\n              00:00\n            </div>\n          </div>\n        )}\n      </PlayerContextConsumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}