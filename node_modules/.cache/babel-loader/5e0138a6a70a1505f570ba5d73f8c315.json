{"ast":null,"code":"var _jsxFileName = \"/Users/bastpaq/Documents/student_projects/semaines-intensives/cineo-bast/cineo/src/context/session.context.jsx\";\nimport React, { createContext, Component } from 'react';\nconst SessionContext = createContext({});\nexport class SessionContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.signUp = (lastName, firstName, mail, password, pseudo, e) => {\n      e.preventDefault();\n      let data = {};\n      data.lastName = lastName;\n      data.firstName = firstName;\n      data.mail = mail;\n      data.password = password;\n      data.pseudo = pseudo;\n      fetch('https://bastienpaquier.masselab.com/signUp.php', {\n        method: 'POST',\n        body: JSON.stringify(data)\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        /* if (data.message) {\n          this.setState({ mailAlreadyExist: true });\n        } else {\n          let userLoged = {\n            id: data.user[0].id,\n            name: data.user[0].name,\n            lastName: data.user[0].last_name,\n            pseudo: data.user[0].pseudo,\n            mail: data.user[0].mail,\n            signUpDate: data.user[0].date_inscription,\n          };\n          this.setState({ user: userLoged });\n          localStorage.setItem('user', JSON.stringify(userLoged)); \n        }*/\n      });\n    };\n\n    this.changeWarningStates = () => {\n      this.setState({\n        mailAlreadyExist: false,\n        wrongLogin: false\n      });\n    };\n\n    this.deleteUser = () => {\n      this.setState({\n        user: null,\n        movieList: null\n      });\n      localStorage.removeItem('user');\n      localStorage.removeItem('moviesList');\n      /* let data = {};\n      data.mail = this.state.user.mail;\n       fetch('http://18.191.118.60:80/deleteUser.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({ user: null });\n          localStorage.removeItem('user');\n          localStorage.removeItem('moviesList');\n        }); */\n    };\n\n    this.logOut = () => {\n      this.setState({\n        user: null,\n        movieList: null\n      });\n      localStorage.removeItem('user');\n      localStorage.removeItem('moviesList');\n    };\n\n    this.addMovie = filmId => {\n      let moviesList;\n\n      if (localStorage.getItem('moviesList')) {\n        moviesList = [...JSON.parse(localStorage.getItem('moviesList'))];\n      } else {\n        moviesList = [];\n      }\n\n      let newList = [...moviesList, filmId];\n      this.setState({\n        movieList: newList\n      });\n      localStorage.setItem('moviesList', JSON.stringify(newList));\n      /* let data = {};\n      data.idUser = this.state.user.id;\n      data.idFilm = filmId.toString();\n       fetch('http://18.191.118.60:80/addFilm.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let movieList = [];\n          data.forEach((movie) => {\n            movieList.push(movie.id_movie);\n          });\n          this.setState({ movieList: movieList });\n          localStorage.setItem('moviesList', JSON.stringify(movieList));\n        }); */\n    };\n\n    this.deleteMovie = id_movie => {\n      const moviesList = [...this.state.movieList];\n      const index = moviesList.findIndex(el => el === id_movie);\n      moviesList.splice(index, 1);\n      this.setState({\n        movieList: moviesList\n      });\n      localStorage.setItem('moviesList', JSON.stringify(moviesList));\n      /* let data = {};\n      data.movieId = id_movie.toString();\n      data.userId = this.state.user.id;\n       fetch('http://18.191.118.60:80/deleteMovie.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n          let movieList = [];\n          data.forEach((movie) => {\n            movieList.push(movie.id_movie);\n          });\n          this.setState({ movieList: movieList });\n          localStorage.setItem('moviesList', JSON.stringify(movieList));\n        }); */\n    };\n\n    this.changePseudo = pseudo => {\n      const initialUser = JSON.parse(localStorage.getItem('user'));\n      initialUser.pseudo = pseudo;\n      localStorage.setItem('user', JSON.stringify(initialUser));\n      this.setState({\n        user: initialUser\n      });\n      /* let data = {};\n      data.id = this.state.user.id;\n      data.value = pseudo;\n       fetch('http://18.191.118.60:80/changePseudo.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let userLoged = {\n            id: data[0].id,\n            name: data[0].name,\n            lastName: data[0].last_name,\n            pseudo: data[0].pseudo,\n            mail: data[0].mail,\n            signUpDate: data[0].date_inscription,\n          };\n          this.setState({ user: userLoged });\n          localStorage.setItem('user', JSON.stringify(userLoged));\n        }); */\n    };\n\n    this.changeLastName = lastName => {\n      const initialUser = JSON.parse(localStorage.getItem('user'));\n      initialUser.lastName = lastName;\n      localStorage.setItem('user', JSON.stringify(initialUser));\n      this.setState({\n        user: initialUser\n      });\n      /* let data = {};\n      data.id = this.state.user.id;\n      data.value = lastName;\n       fetch('http://18.191.118.60:80/changeLastName.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n          let userLoged = {\n            id: data[0].id,\n            name: data[0].name,\n            lastName: data[0].last_name,\n            pseudo: data[0].pseudo,\n            mail: data[0].mail,\n            signUpDate: data[0].date_inscription,\n          };\n          this.setState({ user: userLoged });\n          localStorage.setItem('user', JSON.stringify(userLoged));\n        }); */\n    };\n\n    this.changeFirstName = firstName => {\n      const initialUser = JSON.parse(localStorage.getItem('user'));\n      initialUser.name = firstName;\n      localStorage.setItem('user', JSON.stringify(initialUser));\n      this.setState({\n        user: initialUser\n      });\n      /* let data = {};\n      data.id = this.state.user.id;\n      data.value = firstName;\n       fetch('http://18.191.118.60:80/changeFirstName.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let userLoged = {\n            id: data[0].id,\n            name: data[0].name,\n            lastName: data[0].last_name,\n            pseudo: data[0].pseudo,\n            mail: data[0].mail,\n            signUpDate: data[0].date_inscription,\n          };\n          this.setState({ user: userLoged });\n          localStorage.setItem('user', JSON.stringify(userLoged));\n        }); */\n    };\n\n    this.changeMail = mail => {\n      const initialUser = JSON.parse(localStorage.getItem('user'));\n      initialUser.mail = mail;\n\n      if (/^[a-z0-9._-]+@[a-z0-9._-]+\\.[a-z]{2,6}$/i.test(mail)) {\n        localStorage.setItem('user', JSON.stringify(initialUser));\n        this.setState({\n          user: initialUser\n        });\n        this.setState({\n          isNewMailValid: true\n        });\n      } else {\n        this.setState({\n          isNewMailValid: false\n        });\n      }\n      /* let data = {};\n      data.id = this.state.user.id;\n      data.value = mail;\n       fetch('http://18.191.118.60:80/changeMail.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let userLoged = {\n            id: data[0].id,\n            name: data[0].name,\n            lastName: data[0].last_name,\n            pseudo: data[0].pseudo,\n            mail: data[0].mail,\n            signUpDate: data[0].date_inscription,\n          };\n          this.setState({ user: userLoged });\n          localStorage.setItem('user', JSON.stringify(userLoged));\n        }); */\n\n    };\n\n    this.state = {\n      user: null,\n      mailAlreadyExist: false,\n      wrongLogin: false,\n      movieList: null,\n      isNewMailValid: true\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('user')) {\n      this.setState({\n        user: JSON.parse(localStorage.getItem('user'))\n      });\n    }\n\n    if (localStorage.getItem('moviesList')) {\n      this.setState({\n        movieList: JSON.parse(localStorage.getItem('moviesList'))\n      });\n    }\n  } // SIGN IN TUNED OFF BECAUSE NO MORE BACKEND GESTION\n\n  /* signIn = (mail, password, e) => {\n    e.preventDefault();\n    let infosUsers = {};\n    infosUsers.mail = mail;\n    infosUsers.password = password;\n     fetch('http://18.191.118.60:80/signIn.php', {\n      method: 'POST',\n      body: JSON.stringify(infosUsers),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.success) {\n          let userloged = {\n            id: data.infos[0].id,\n            name: data.infos[0].name,\n            lastName: data.infos[0].last_name,\n            pseudo: data.infos[0].pseudo,\n            mail: data.infos[0].mail,\n            signUpDate: data.infos[0].date_inscription,\n          };\n          this.setState({ user: userloged });\n          localStorage.setItem('user', JSON.stringify(userloged));\n           let userId = {};\n          userId.id = data.infos[0].id;\n          fetch('http://18.191.118.60:80/getMoviesList.php', {\n            method: 'POST',\n            body: JSON.stringify(userId),\n          })\n            .then((response) => {\n              return response.json();\n            })\n            .then((data) => {\n              if (data.length > 0) {\n                let movieList = [];\n                data.forEach((movie) => {\n                  movieList.push(movie.id_movie);\n                });\n                this.setState({ movieList: movieList });\n                localStorage.setItem('moviesList', JSON.stringify(movieList));\n              }\n            });\n        } else {\n          this.setState({ wrongLogin: true });\n        }\n      });\n  }; */\n\n\n  render() {\n    const value = { ...this.state,\n      signIn: this.signIn,\n      signUp: this.signUp,\n      changeWarningStates: this.changeWarningStates,\n      deleteUser: this.deleteUser,\n      logOut: this.logOut,\n      addMovie: this.addMovie,\n      deleteMovie: this.deleteMovie,\n      changePseudo: this.changePseudo,\n      changeLastName: this.changeLastName,\n      changeFirstName: this.changeFirstName,\n      changeMail: this.changeMail\n    };\n    return /*#__PURE__*/React.createElement(SessionContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nexport const SessionContextConsumer = SessionContext.Consumer;","map":{"version":3,"sources":["/Users/bastpaq/Documents/student_projects/semaines-intensives/cineo-bast/cineo/src/context/session.context.jsx"],"names":["React","createContext","Component","SessionContext","SessionContextProvider","constructor","props","signUp","lastName","firstName","mail","password","pseudo","e","preventDefault","data","fetch","method","body","JSON","stringify","then","response","json","console","log","changeWarningStates","setState","mailAlreadyExist","wrongLogin","deleteUser","user","movieList","localStorage","removeItem","logOut","addMovie","filmId","moviesList","getItem","parse","newList","setItem","deleteMovie","id_movie","state","index","findIndex","el","splice","changePseudo","initialUser","changeLastName","changeFirstName","name","changeMail","test","isNewMailValid","componentDidMount","render","value","signIn","children","SessionContextConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { createContext, Component } from 'react';\n\nconst SessionContext = createContext({});\n\nexport class SessionContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      mailAlreadyExist: false,\n      wrongLogin: false,\n      movieList: null,\n      isNewMailValid: true,\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('user')) {\n      this.setState({ user: JSON.parse(localStorage.getItem('user')) });\n    }\n    if (localStorage.getItem('moviesList')) {\n      this.setState({\n        movieList: JSON.parse(localStorage.getItem('moviesList')),\n      });\n    }\n  }\n\n  // SIGN IN TUNED OFF BECAUSE NO MORE BACKEND GESTION\n\n  /* signIn = (mail, password, e) => {\n    e.preventDefault();\n    let infosUsers = {};\n    infosUsers.mail = mail;\n    infosUsers.password = password;\n\n    fetch('http://18.191.118.60:80/signIn.php', {\n      method: 'POST',\n      body: JSON.stringify(infosUsers),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.success) {\n          let userloged = {\n            id: data.infos[0].id,\n            name: data.infos[0].name,\n            lastName: data.infos[0].last_name,\n            pseudo: data.infos[0].pseudo,\n            mail: data.infos[0].mail,\n            signUpDate: data.infos[0].date_inscription,\n          };\n          this.setState({ user: userloged });\n          localStorage.setItem('user', JSON.stringify(userloged));\n\n          let userId = {};\n          userId.id = data.infos[0].id;\n          fetch('http://18.191.118.60:80/getMoviesList.php', {\n            method: 'POST',\n            body: JSON.stringify(userId),\n          })\n            .then((response) => {\n              return response.json();\n            })\n            .then((data) => {\n              if (data.length > 0) {\n                let movieList = [];\n                data.forEach((movie) => {\n                  movieList.push(movie.id_movie);\n                });\n                this.setState({ movieList: movieList });\n                localStorage.setItem('moviesList', JSON.stringify(movieList));\n              }\n            });\n        } else {\n          this.setState({ wrongLogin: true });\n        }\n      });\n  }; */\n\n  signUp = (lastName, firstName, mail, password, pseudo, e) => {\n    e.preventDefault();\n\n    let data = {};\n\n    data.lastName = lastName;\n    data.firstName = firstName;\n    data.mail = mail;\n    data.password = password;\n    data.pseudo = pseudo;\n\n    fetch('https://bastienpaquier.masselab.com/signUp.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        /* if (data.message) {\n          this.setState({ mailAlreadyExist: true });\n        } else {\n          let userLoged = {\n            id: data.user[0].id,\n            name: data.user[0].name,\n            lastName: data.user[0].last_name,\n            pseudo: data.user[0].pseudo,\n            mail: data.user[0].mail,\n            signUpDate: data.user[0].date_inscription,\n          };\n          this.setState({ user: userLoged });\n          localStorage.setItem('user', JSON.stringify(userLoged)); \n        }*/\n      });\n  };\n\n  changeWarningStates = () => {\n    this.setState({ mailAlreadyExist: false, wrongLogin: false });\n  };\n\n  deleteUser = () => {\n    this.setState({ user: null, movieList: null });\n    localStorage.removeItem('user');\n    localStorage.removeItem('moviesList');\n\n    /* let data = {};\n    data.mail = this.state.user.mail;\n\n    fetch('http://18.191.118.60:80/deleteUser.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ user: null });\n        localStorage.removeItem('user');\n        localStorage.removeItem('moviesList');\n      }); */\n  };\n\n  logOut = () => {\n    this.setState({ user: null, movieList: null });\n    localStorage.removeItem('user');\n    localStorage.removeItem('moviesList');\n  };\n\n  addMovie = (filmId) => {\n    let moviesList;\n    if (localStorage.getItem('moviesList')) {\n      moviesList = [...JSON.parse(localStorage.getItem('moviesList'))];\n    } else {\n      moviesList = [];\n    }\n\n    let newList = [...moviesList, filmId];\n\n    this.setState({ movieList: newList });\n    localStorage.setItem('moviesList', JSON.stringify(newList));\n\n    /* let data = {};\n    data.idUser = this.state.user.id;\n    data.idFilm = filmId.toString();\n\n    fetch('http://18.191.118.60:80/addFilm.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let movieList = [];\n        data.forEach((movie) => {\n          movieList.push(movie.id_movie);\n        });\n        this.setState({ movieList: movieList });\n        localStorage.setItem('moviesList', JSON.stringify(movieList));\n      }); */\n  };\n\n  deleteMovie = (id_movie) => {\n    const moviesList = [...this.state.movieList];\n    const index = moviesList.findIndex((el) => el === id_movie);\n    moviesList.splice(index, 1);\n\n    this.setState({ movieList: moviesList });\n    localStorage.setItem('moviesList', JSON.stringify(moviesList));\n\n    /* let data = {};\n    data.movieId = id_movie.toString();\n    data.userId = this.state.user.id;\n\n    fetch('http://18.191.118.60:80/deleteMovie.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        let movieList = [];\n        data.forEach((movie) => {\n          movieList.push(movie.id_movie);\n        });\n        this.setState({ movieList: movieList });\n        localStorage.setItem('moviesList', JSON.stringify(movieList));\n      }); */\n  };\n\n  changePseudo = (pseudo) => {\n    const initialUser = JSON.parse(localStorage.getItem('user'));\n    initialUser.pseudo = pseudo;\n\n    localStorage.setItem('user', JSON.stringify(initialUser));\n    this.setState({ user: initialUser });\n    /* let data = {};\n    data.id = this.state.user.id;\n    data.value = pseudo;\n\n    fetch('http://18.191.118.60:80/changePseudo.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let userLoged = {\n          id: data[0].id,\n          name: data[0].name,\n          lastName: data[0].last_name,\n          pseudo: data[0].pseudo,\n          mail: data[0].mail,\n          signUpDate: data[0].date_inscription,\n        };\n        this.setState({ user: userLoged });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      }); */\n  };\n\n  changeLastName = (lastName) => {\n    const initialUser = JSON.parse(localStorage.getItem('user'));\n    initialUser.lastName = lastName;\n\n    localStorage.setItem('user', JSON.stringify(initialUser));\n    this.setState({ user: initialUser });\n    /* let data = {};\n    data.id = this.state.user.id;\n    data.value = lastName;\n\n    fetch('http://18.191.118.60:80/changeLastName.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        let userLoged = {\n          id: data[0].id,\n          name: data[0].name,\n          lastName: data[0].last_name,\n          pseudo: data[0].pseudo,\n          mail: data[0].mail,\n          signUpDate: data[0].date_inscription,\n        };\n        this.setState({ user: userLoged });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      }); */\n  };\n\n  changeFirstName = (firstName) => {\n    const initialUser = JSON.parse(localStorage.getItem('user'));\n    initialUser.name = firstName;\n\n    localStorage.setItem('user', JSON.stringify(initialUser));\n    this.setState({ user: initialUser });\n    /* let data = {};\n    data.id = this.state.user.id;\n    data.value = firstName;\n\n    fetch('http://18.191.118.60:80/changeFirstName.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let userLoged = {\n          id: data[0].id,\n          name: data[0].name,\n          lastName: data[0].last_name,\n          pseudo: data[0].pseudo,\n          mail: data[0].mail,\n          signUpDate: data[0].date_inscription,\n        };\n        this.setState({ user: userLoged });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      }); */\n  };\n\n  changeMail = (mail) => {\n    const initialUser = JSON.parse(localStorage.getItem('user'));\n    initialUser.mail = mail;\n\n    if (/^[a-z0-9._-]+@[a-z0-9._-]+\\.[a-z]{2,6}$/i.test(mail)) {\n      localStorage.setItem('user', JSON.stringify(initialUser));\n      this.setState({ user: initialUser });\n\n      this.setState({ isNewMailValid: true });\n    } else {\n      this.setState({ isNewMailValid: false });\n    }\n    /* let data = {};\n    data.id = this.state.user.id;\n    data.value = mail;\n\n    fetch('http://18.191.118.60:80/changeMail.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let userLoged = {\n          id: data[0].id,\n          name: data[0].name,\n          lastName: data[0].last_name,\n          pseudo: data[0].pseudo,\n          mail: data[0].mail,\n          signUpDate: data[0].date_inscription,\n        };\n        this.setState({ user: userLoged });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      }); */\n  };\n\n  render() {\n    const value = {\n      ...this.state,\n      signIn: this.signIn,\n      signUp: this.signUp,\n      changeWarningStates: this.changeWarningStates,\n      deleteUser: this.deleteUser,\n      logOut: this.logOut,\n      addMovie: this.addMovie,\n      deleteMovie: this.deleteMovie,\n      changePseudo: this.changePseudo,\n      changeLastName: this.changeLastName,\n      changeFirstName: this.changeFirstName,\n      changeMail: this.changeMail,\n    };\n\n    return (\n      <SessionContext.Provider value={value}>\n        {this.props.children}\n      </SessionContext.Provider>\n    );\n  }\n}\n\nexport const SessionContextConsumer = SessionContext.Consumer;\n"]},"metadata":{},"sourceType":"module"}