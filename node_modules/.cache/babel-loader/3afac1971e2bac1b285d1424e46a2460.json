{"ast":null,"code":"var _jsxFileName = \"/Users/bastpaq/Documents/student_projects/semaines-intensives/cineo-bast/cineo/src/pages/player/player.page.jsx\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { moviesOnly, seriesOnly } from '../../data.utils';\nimport Player from '../../components/player/player.component';\nimport Header from '../../components/header/header.component';\nimport Button from '../../components/button/button.component';\nimport Title from '../../components/title/title.component';\nimport Slider from '../../components/slider/slider.component';\nimport Footer from '../../components/footer/footer.component';\nimport Video from '../../assets/video/sharknado-6-shark-vs-t-rex-trailer-new-2018-the-last-sharknado-movie-hd.mp4';\nimport data from '../../data.json';\nimport { PlayerContextProvider, PlayerContextConsumer } from '../../components/player/player.context';\nimport { createRef } from 'react';\nimport { SessionContextConsumer } from '../../context/session.context';\nexport default class playerPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      if (data.filter(el => el.imdbID === this.state.id)[0].type === 'movie') {\n        this.setState({\n          isMovie: true\n        });\n      } else {\n        this.setState({\n          isMovie: false\n        });\n      }\n    };\n\n    this.handelClick = () => {\n      this.state.isSeasonsListVisible ? this.setState({\n        isSeasonsListVisible: false\n      }) : this.setState({\n        isSeasonsListVisible: true\n      });\n    };\n\n    this.seasonsItemClick = e => {\n      this.seasonButtonRef.current.innerHTML = e.target.innerHTML;\n      this.setState({\n        isSeasonsListVisible: false\n      });\n    };\n\n    this.globalClick = () => {\n      if (this.state.isSeasonsListVisible) {\n        this.setState({\n          isSeasonsListVisible: false\n        });\n      }\n    };\n\n    this.state = {\n      id: parseInt(this.props.location.search.substr(4)),\n      isMovie: true,\n      isSeasonsListVisible: false\n    };\n    this.seasonButtonRef = createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.location !== prevProps.location) {\n      this.setState({\n        id: parseInt(this.props.location.search.substr(4))\n      });\n    }\n  }\n\n  render() {\n    const {\n      id,\n      isMovie,\n      isSeasonsListVisible\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SessionContextConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, ({\n      user,\n      addMovie\n    }) => {\n      if (!user) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/sign-in-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      });\n      return /*#__PURE__*/React.createElement(PlayerContextProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PlayerContextConsumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, ({\n        videoContainerRef,\n        play\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page\",\n        onClick: () => this.globalClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page__back-to-home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        viewBox: \"0 0 21 16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M0.292893 7.29289C-0.097631 7.68342 -0.0976311 8.31658 0.292893 8.7071L6.65685 15.0711C7.04738 15.4616 7.68054 15.4616 8.07107 15.0711C8.46159 14.6805 8.46159 14.0474 8.07107 13.6569L2.41421 8L8.07107 2.34314C8.46159 1.95262 8.46159 1.31946 8.07107 0.928931C7.68054 0.538407 7.04738 0.538407 6.65685 0.928931L0.292893 7.29289ZM21 7L1 7L1 9L21 9L21 7Z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }\n      }, \"Retour \\xE0 l'acceuil\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page__video-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page__video\",\n        ref: videoContainerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Player, {\n        source: Video,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page__description description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, data.filter(el => el.imdbID === id)[0].title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }, `${data.filter(el => el.imdbID === id)[0].year} -\n                          ${data.filter(el => el.imdbID === id)[0].genre} -\n                          ${data.filter(el => el.imdbID === id)[0].duration}`)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"descriptions__buttons button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"button__play-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }\n        }, \"Regarder\"),\n        clickFunction: () => play(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }\n      }), !isMovie && /*#__PURE__*/React.createElement(Button, {\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          className: `button__season-content ${isSeasonsListVisible ? 'is-clicked' : ''}`,\n          ref: this.seasonButtonRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 35\n          }\n        }, \"Saison 1\"),\n        clickFunction: () => this.handelClick(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 31\n        }\n      }), !isMovie && isSeasonsListVisible && /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"seasons-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: e => this.seasonsItemClick(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, \"Saison 1\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: e => this.seasonsItemClick(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }, \"Saison 2\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: e => this.seasonsItemClick(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 33\n        }\n      }, \"Saison 3\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: e => this.seasonsItemClick(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }\n      }, \"Saison 4\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: e => this.seasonsItemClick(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, \"Saison 5\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: e => this.seasonsItemClick(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, \"Saison 6\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button__download\",\n        onClick: () => addMovie(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: \"352\",\n        height: \"448\",\n        viewBox: \"0 0 352 448\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M256 144H296C306.609 144 316.783 148.214 324.284 155.716C331.786 163.217 336 173.391 336 184V392C336 402.609 331.786 412.783 324.284 420.284C316.783 427.786 306.609 432 296 432H56C45.3913 432 35.2172 427.786 27.7157 420.284C20.2143 412.783 16 402.609 16 392V184C16 173.391 20.2143 163.217 27.7157 155.716C35.2172 148.214 45.3913 144 56 144H96\",\n        stroke: \"black\",\n        \"stroke-width\": \"32\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M96 240L176 320L256 240\",\n        stroke: \"black\",\n        \"stroke-width\": \"32\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M176 16V304\",\n        stroke: \"black\",\n        \"stroke-width\": \"32\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"description__synopsis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }\n      }, \"Synopsis\"), data.filter(el => el.imdbID === id)[0].pitch), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"description__actors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      }, \"Acteurs\"), data.filter(el => el.imdbID === id)[0].stars)))), !isMovie && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page__series-episodes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, \"Episode 1\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, \"Episode 2\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, \"Episode 3\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, \"Episode 4\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, \"Episode 5\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      }, \"Episode 6\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, \"Episode 7\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-page__slider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Title, {\n        content: `Les ${isMovie ? 'films' : 'série'} similaires`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        data: data.filter(el => el.imdbID === this.state.id)[0].type === 'movie' ? moviesOnly(data, 15) : seriesOnly(data, 15),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }))));\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/bastpaq/Documents/student_projects/semaines-intensives/cineo-bast/cineo/src/pages/player/player.page.jsx"],"names":["React","Component","Link","Redirect","moviesOnly","seriesOnly","Player","Header","Button","Title","Slider","Footer","Video","data","PlayerContextProvider","PlayerContextConsumer","createRef","SessionContextConsumer","playerPage","constructor","props","componentWillMount","filter","el","imdbID","state","id","type","setState","isMovie","handelClick","isSeasonsListVisible","seasonsItemClick","e","seasonButtonRef","current","innerHTML","target","globalClick","parseInt","location","search","substr","componentDidUpdate","prevProps","prevState","snapshot","render","user","addMovie","videoContainerRef","play","title","year","genre","duration","pitch","stars"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { moviesOnly, seriesOnly } from '../../data.utils';\n\nimport Player from '../../components/player/player.component';\nimport Header from '../../components/header/header.component';\nimport Button from '../../components/button/button.component';\nimport Title from '../../components/title/title.component';\nimport Slider from '../../components/slider/slider.component';\nimport Footer from '../../components/footer/footer.component';\nimport Video from '../../assets/video/sharknado-6-shark-vs-t-rex-trailer-new-2018-the-last-sharknado-movie-hd.mp4';\n\nimport data from '../../data.json';\nimport {\n  PlayerContextProvider,\n  PlayerContextConsumer,\n} from '../../components/player/player.context';\nimport { createRef } from 'react';\nimport { SessionContextConsumer } from '../../context/session.context';\n\nexport default class playerPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: parseInt(this.props.location.search.substr(4)),\n      isMovie: true,\n      isSeasonsListVisible: false,\n    };\n    this.seasonButtonRef = createRef();\n  }\n\n  componentWillMount = () => {\n    if (data.filter((el) => el.imdbID === this.state.id)[0].type === 'movie') {\n      this.setState({ isMovie: true });\n    } else {\n      this.setState({ isMovie: false });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.location !== prevProps.location) {\n      this.setState({ id: parseInt(this.props.location.search.substr(4)) });\n    }\n  }\n\n  handelClick = () => {\n    this.state.isSeasonsListVisible\n      ? this.setState({ isSeasonsListVisible: false })\n      : this.setState({ isSeasonsListVisible: true });\n  };\n\n  seasonsItemClick = (e) => {\n    this.seasonButtonRef.current.innerHTML = e.target.innerHTML;\n    this.setState({ isSeasonsListVisible: false });\n  };\n\n  globalClick = () => {\n    if (this.state.isSeasonsListVisible) {\n      this.setState({ isSeasonsListVisible: false });\n    }\n  };\n\n  render() {\n    const { id, isMovie, isSeasonsListVisible } = this.state;\n\n    return (\n      <SessionContextConsumer>\n        {({ user, addMovie }) => {\n          if (!user) return <Redirect to='/sign-in-up'></Redirect>;\n          return (\n            <PlayerContextProvider>\n              <PlayerContextConsumer>\n                {({ videoContainerRef, play }) => (\n                  <div\n                    className='player-page'\n                    onClick={() => this.globalClick()}\n                  >\n                    <Header />\n                    <div className='player-page__content'>\n                      <Link to=''>\n                        <div className='player-page__back-to-home'>\n                          <svg viewBox='0 0 21 16'>\n                            <path d='M0.292893 7.29289C-0.097631 7.68342 -0.0976311 8.31658 0.292893 8.7071L6.65685 15.0711C7.04738 15.4616 7.68054 15.4616 8.07107 15.0711C8.46159 14.6805 8.46159 14.0474 8.07107 13.6569L2.41421 8L8.07107 2.34314C8.46159 1.95262 8.46159 1.31946 8.07107 0.928931C7.68054 0.538407 7.04738 0.538407 6.65685 0.928931L0.292893 7.29289ZM21 7L1 7L1 9L21 9L21 7Z' />\n                          </svg>\n                          <p>Retour à l'acceuil</p>\n                        </div>\n                      </Link>\n                      <div className='player-page__video-description'>\n                        <div\n                          className='player-page__video'\n                          ref={videoContainerRef}\n                        >\n                          <Player source={Video} />\n                        </div>\n                        <div className='player-page__description description'>\n                          <div className='description__title'>\n                            <h1>\n                              {data.filter((el) => el.imdbID === id)[0].title}\n                            </h1>\n                            <p>\n                              {`${\n                                data.filter((el) => el.imdbID === id)[0].year\n                              } -\n                          ${data.filter((el) => el.imdbID === id)[0].genre} -\n                          ${data.filter((el) => el.imdbID === id)[0].duration}`}\n                            </p>\n                          </div>\n                          <div className='descriptions__buttons button'>\n                            <Button\n                              content={\n                                <div className='button__play-content'>\n                                  Regarder\n                                </div>\n                              }\n                              clickFunction={() => play()}\n                            />\n                            {!isMovie && (\n                              <Button\n                                content={\n                                  <div\n                                    className={`button__season-content ${\n                                      isSeasonsListVisible ? 'is-clicked' : ''\n                                    }`}\n                                    ref={this.seasonButtonRef}\n                                  >\n                                    Saison 1\n                                  </div>\n                                }\n                                clickFunction={() => this.handelClick()}\n                              />\n                            )}\n                            {!isMovie && isSeasonsListVisible && (\n                              <ul className='seasons-list'>\n                                <li onClick={(e) => this.seasonsItemClick(e)}>\n                                  Saison 1\n                                </li>\n                                <li onClick={(e) => this.seasonsItemClick(e)}>\n                                  Saison 2\n                                </li>\n                                <li onClick={(e) => this.seasonsItemClick(e)}>\n                                  Saison 3\n                                </li>\n                                <li onClick={(e) => this.seasonsItemClick(e)}>\n                                  Saison 4\n                                </li>\n                                <li onClick={(e) => this.seasonsItemClick(e)}>\n                                  Saison 5\n                                </li>\n                                <li onClick={(e) => this.seasonsItemClick(e)}>\n                                  Saison 6\n                                </li>\n                              </ul>\n                            )}\n                            <div\n                              className='button__download'\n                              onClick={() => addMovie(id)}\n                            >\n                              <svg\n                                width='352'\n                                height='448'\n                                viewBox='0 0 352 448'\n                                fill='none'\n                                xmlns='http://www.w3.org/2000/svg'\n                              >\n                                <path\n                                  d='M256 144H296C306.609 144 316.783 148.214 324.284 155.716C331.786 163.217 336 173.391 336 184V392C336 402.609 331.786 412.783 324.284 420.284C316.783 427.786 306.609 432 296 432H56C45.3913 432 35.2172 427.786 27.7157 420.284C20.2143 412.783 16 402.609 16 392V184C16 173.391 20.2143 163.217 27.7157 155.716C35.2172 148.214 45.3913 144 56 144H96'\n                                  stroke='black'\n                                  stroke-width='32'\n                                  stroke-linecap='round'\n                                  stroke-linejoin='round'\n                                />\n                                <path\n                                  d='M96 240L176 320L256 240'\n                                  stroke='black'\n                                  stroke-width='32'\n                                  stroke-linecap='round'\n                                  stroke-linejoin='round'\n                                />\n                                <path\n                                  d='M176 16V304'\n                                  stroke='black'\n                                  stroke-width='32'\n                                  stroke-linecap='round'\n                                  stroke-linejoin='round'\n                                />\n                              </svg>\n                            </div>\n                          </div>\n                          <p className='description__synopsis'>\n                            <span>Synopsis</span>\n                            {data.filter((el) => el.imdbID === id)[0].pitch}\n                          </p>\n                          <p className='description__actors'>\n                            <span>Acteurs</span>\n                            {data.filter((el) => el.imdbID === id)[0].stars}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    {!isMovie && (\n                      <div className='player-page__series-episodes'>\n                        <div>Episode 1</div>\n                        <div>Episode 2</div>\n                        <div>Episode 3</div>\n                        <div>Episode 4</div>\n                        <div>Episode 5</div>\n                        <div>Episode 6</div>\n                        <div>Episode 7</div>\n                      </div>\n                    )}\n                    <div className='player-page__slider'>\n                      <Title\n                        content={`Les ${\n                          isMovie ? 'films' : 'série'\n                        } similaires`}\n                      />\n                      <Slider\n                        data={\n                          data.filter((el) => el.imdbID === this.state.id)[0]\n                            .type === 'movie'\n                            ? moviesOnly(data, 15)\n                            : seriesOnly(data, 15)\n                        }\n                      />\n                    </div>\n                    <Footer />\n                  </div>\n                )}\n              </PlayerContextConsumer>\n            </PlayerContextProvider>\n          );\n        }}\n      </SessionContextConsumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}