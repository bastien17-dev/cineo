{"ast":null,"code":"export const lastReleases = (array, type = \"movie\", nb = 6) => {\n  let res = array.filter(el => {\n    return el.type === type && (el.year === 2018 || el.year === 2019 || el.year === 2020 || el.year === 2016 || el.year === 2017);\n  });\n  return res.slice(0, nb);\n};\nexport const moviesOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.type === \"movie\" && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const seriesOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.type === \"serie\" && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const originalsOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.original === \"original\");\n  return res.slice(0, nb);\n};\nexport const animationOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.genre.includes(\"Animation\") && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const trendingNow = (array, nb = 8) => {\n  let res = array.filter(el => el.trending === \"trending\" && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const searchByTitle = (array, string, nb = 8) => {\n  if (string.length < 3) return [];\n\n  var checkTitle = (name, string) => {\n    var pattern = string.split(\"\").map(x => {\n      return `(?=.*${x})`;\n    }).join(\"\");\n    var regex = new RegExp(`${pattern}`, \"g\");\n    return name.match(regex);\n  };\n\n  var filteredArr = array.filter(x => {\n    if (x.type !== \"soon\") {\n      var xSub = x.title.substring(0, 3).toLowerCase();\n      return x.title.toLowerCase().includes(string) || checkTitle(xSub, string);\n    }\n\n    return;\n  });\n  return filteredArr;\n};\nexport const comingSoon = (array, string, nb = 8) => {\n  let res = array.filter(el => el.type === \"soon\" && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const originalsSeriesOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.original === \"original\" && el.type === \"serie\");\n  return res.slice(0, nb);\n};\nexport const originalsMoviesOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.original === \"original\" && el.type === \"movie\");\n  return res.slice(0, nb);\n};\nexport const comedySeriesOnly = (array, nb = 8) => {\n  let res = array.filter(el => {\n    return el.genre.indexOf(\"Comedie\") !== -1 && el.type === \"serie\" && el.original === \"\";\n  });\n  console.log(res);\n  return res.slice(0, nb);\n};\nexport const quarantined = (array, nb = 8) => {\n  let res = array.filter(el => el.quarantined === \"quarantined\" && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const animeSeriesOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.genre.indexOf(\"AnimÃ©\") !== -1 && el.type === \"serie\" && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const animationMoviesOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.genre.indexOf(\"Animation\") !== -1 && el.type === \"movie\" && el.original === \"\");\n  return res.slice(0, nb);\n};\nexport const actionMoviesOnly = (array, nb = 8) => {\n  let res = array.filter(el => el.genre.indexOf(\"Action\") !== -1 && el.type === \"movie\");\n  return res.slice(0, nb);\n};","map":{"version":3,"sources":["/Users/bastpaq/Documents/student_projects/semaines-intensives/cineo-bast/cineo/src/data.utils.js"],"names":["lastReleases","array","type","nb","res","filter","el","year","slice","moviesOnly","original","seriesOnly","originalsOnly","animationOnly","genre","includes","trendingNow","trending","searchByTitle","string","length","checkTitle","name","pattern","split","map","x","join","regex","RegExp","match","filteredArr","xSub","title","substring","toLowerCase","comingSoon","originalsSeriesOnly","originalsMoviesOnly","comedySeriesOnly","indexOf","console","log","quarantined","animeSeriesOnly","animationMoviesOnly","actionMoviesOnly"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,KAAD,EAAQC,IAAI,GAAG,OAAf,EAAwBC,EAAE,GAAG,CAA7B,KAAmC;AAC7D,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAcC,EAAD,IAAQ;AAC7B,WACEA,EAAE,CAACJ,IAAH,KAAYA,IAAZ,KACCI,EAAE,CAACC,IAAH,KAAY,IAAZ,IACCD,EAAE,CAACC,IAAH,KAAY,IADb,IAECD,EAAE,CAACC,IAAH,KAAY,IAFb,IAGCD,EAAE,CAACC,IAAH,KAAY,IAHb,IAICD,EAAE,CAACC,IAAH,KAAY,IALd,CADF;AAQD,GATS,CAAV;AAUA,SAAOH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CAZM;AAcP,OAAO,MAAMM,UAAU,GAAG,CAACR,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AAC3C,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACJ,IAAH,KAAY,OAAZ,IAAuBI,EAAE,CAACI,QAAH,KAAgB,EAA5D,CAAV;AACA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CAHM;AAKP,OAAO,MAAMQ,UAAU,GAAG,CAACV,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AAC3C,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACJ,IAAH,KAAY,OAAZ,IAAuBI,EAAE,CAACI,QAAH,KAAgB,EAA5D,CAAV;AACA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CAHM;AAKP,OAAO,MAAMS,aAAa,GAAG,CAACX,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AAC9C,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACI,QAAH,KAAgB,UAArC,CAAV;AACA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CAHM;AAKP,OAAO,MAAMU,aAAa,GAAG,CAACZ,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AAC9C,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IAAQA,EAAE,CAACQ,KAAH,CAASC,QAAT,CAAkB,WAAlB,KAAkCT,EAAE,CAACI,QAAH,KAAgB,EADlD,CAAV;AAGA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CALM;AAOP,OAAO,MAAMa,WAAW,GAAG,CAACf,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AAC5C,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IAAQA,EAAE,CAACW,QAAH,KAAgB,UAAhB,IAA8BX,EAAE,CAACI,QAAH,KAAgB,EAD9C,CAAV;AAGA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CALM;AAOP,OAAO,MAAMe,aAAa,GAAG,CAACjB,KAAD,EAAQkB,MAAR,EAAgBhB,EAAE,GAAG,CAArB,KAA2B;AACtD,MAAIgB,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB,OAAO,EAAP;;AAEvB,MAAIC,UAAU,GAAG,CAACC,IAAD,EAAOH,MAAP,KAAkB;AACjC,QAAII,OAAO,GAAGJ,MAAM,CACjBK,KADW,CACL,EADK,EAEXC,GAFW,CAENC,CAAD,IAAO;AACV,aAAQ,QAAOA,CAAE,GAAjB;AACD,KAJW,EAKXC,IALW,CAKN,EALM,CAAd;AAMA,QAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEN,OAAQ,EAAtB,EAAyB,GAAzB,CAAZ;AACA,WAAOD,IAAI,CAACQ,KAAL,CAAWF,KAAX,CAAP;AACD,GATD;;AAWA,MAAIG,WAAW,GAAG9B,KAAK,CAACI,MAAN,CAAcqB,CAAD,IAAO;AACpC,QAAIA,CAAC,CAACxB,IAAF,KAAW,MAAf,EAAuB;AACrB,UAAI8B,IAAI,GAAGN,CAAC,CAACO,KAAF,CAAQC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBC,WAAxB,EAAX;AACA,aAAOT,CAAC,CAACO,KAAF,CAAQE,WAAR,GAAsBpB,QAAtB,CAA+BI,MAA/B,KAA0CE,UAAU,CAACW,IAAD,EAAOb,MAAP,CAA3D;AACD;;AACD;AACD,GANiB,CAAlB;AAQA,SAAOY,WAAP;AACD,CAvBM;AAyBP,OAAO,MAAMK,UAAU,GAAG,CAACnC,KAAD,EAAQkB,MAAR,EAAgBhB,EAAE,GAAG,CAArB,KAA2B;AACnD,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACJ,IAAH,KAAY,MAAZ,IAAsBI,EAAE,CAACI,QAAH,KAAgB,EAA3D,CAAV;AACA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CAHM;AAKP,OAAO,MAAMkC,mBAAmB,GAAG,CAACpC,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AACpD,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IAAQA,EAAE,CAACI,QAAH,KAAgB,UAAhB,IAA8BJ,EAAE,CAACJ,IAAH,KAAY,OAD1C,CAAV;AAGA,SAAOE,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CALM;AAOP,OAAO,MAAMmC,mBAAmB,GAAG,CAACrC,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AACpD,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IAAQA,EAAE,CAACI,QAAH,KAAgB,UAAhB,IAA8BJ,EAAE,CAACJ,IAAH,KAAY,OAD1C,CAAV;AAGA,SAAOE,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CALM;AAOP,OAAO,MAAMoC,gBAAgB,GAAG,CAACtC,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AACjD,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAcC,EAAD,IAAQ;AAC7B,WACEA,EAAE,CAACQ,KAAH,CAAS0B,OAAT,CAAiB,SAAjB,MAAgC,CAAC,CAAjC,IACAlC,EAAE,CAACJ,IAAH,KAAY,OADZ,IAEAI,EAAE,CAACI,QAAH,KAAgB,EAHlB;AAKD,GANS,CAAV;AAOA+B,EAAAA,OAAO,CAACC,GAAR,CAAYtC,GAAZ;AACA,SAAOA,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CAVM;AAYP,OAAO,MAAMwC,WAAW,GAAG,CAAC1C,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AAC5C,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IAAQA,EAAE,CAACqC,WAAH,KAAmB,aAAnB,IAAoCrC,EAAE,CAACI,QAAH,KAAgB,EADpD,CAAV;AAGA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CALM;AAOP,OAAO,MAAMyC,eAAe,GAAG,CAAC3C,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AAChD,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IACEA,EAAE,CAACQ,KAAH,CAAS0B,OAAT,CAAiB,OAAjB,MAA8B,CAAC,CAA/B,IACAlC,EAAE,CAACJ,IAAH,KAAY,OADZ,IAEAI,EAAE,CAACI,QAAH,KAAgB,EAJV,CAAV;AAOA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CATM;AAWP,OAAO,MAAM0C,mBAAmB,GAAG,CAAC5C,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AACpD,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IACEA,EAAE,CAACQ,KAAH,CAAS0B,OAAT,CAAiB,WAAjB,MAAkC,CAAC,CAAnC,IACAlC,EAAE,CAACJ,IAAH,KAAY,OADZ,IAEAI,EAAE,CAACI,QAAH,KAAgB,EAJV,CAAV;AAOA,SAAON,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CATM;AAWP,OAAO,MAAM2C,gBAAgB,GAAG,CAAC7C,KAAD,EAAQE,EAAE,GAAG,CAAb,KAAmB;AACjD,MAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,CACPC,EAAD,IAAQA,EAAE,CAACQ,KAAH,CAAS0B,OAAT,CAAiB,QAAjB,MAA+B,CAAC,CAAhC,IAAqClC,EAAE,CAACJ,IAAH,KAAY,OADjD,CAAV;AAIA,SAAOE,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaL,EAAb,CAAP;AACD,CANM","sourcesContent":["export const lastReleases = (array, type = \"movie\", nb = 6) => {\n  let res = array.filter((el) => {\n    return (\n      el.type === type &&\n      (el.year === 2018 ||\n        el.year === 2019 ||\n        el.year === 2020 ||\n        el.year === 2016 ||\n        el.year === 2017)\n    );\n  });\n  return res.slice(0, nb);\n};\n\nexport const moviesOnly = (array, nb = 8) => {\n  let res = array.filter((el) => el.type === \"movie\" && el.original === \"\");\n  return res.slice(0, nb);\n};\n\nexport const seriesOnly = (array, nb = 8) => {\n  let res = array.filter((el) => el.type === \"serie\" && el.original === \"\");\n  return res.slice(0, nb);\n};\n\nexport const originalsOnly = (array, nb = 8) => {\n  let res = array.filter((el) => el.original === \"original\");\n  return res.slice(0, nb);\n};\n\nexport const animationOnly = (array, nb = 8) => {\n  let res = array.filter(\n    (el) => el.genre.includes(\"Animation\") && el.original === \"\"\n  );\n  return res.slice(0, nb);\n};\n\nexport const trendingNow = (array, nb = 8) => {\n  let res = array.filter(\n    (el) => el.trending === \"trending\" && el.original === \"\"\n  );\n  return res.slice(0, nb);\n};\n\nexport const searchByTitle = (array, string, nb = 8) => {\n  if (string.length < 3) return [];\n\n  var checkTitle = (name, string) => {\n    var pattern = string\n      .split(\"\")\n      .map((x) => {\n        return `(?=.*${x})`;\n      })\n      .join(\"\");\n    var regex = new RegExp(`${pattern}`, \"g\");\n    return name.match(regex);\n  };\n\n  var filteredArr = array.filter((x) => {\n    if (x.type !== \"soon\") {\n      var xSub = x.title.substring(0, 3).toLowerCase();\n      return x.title.toLowerCase().includes(string) || checkTitle(xSub, string);\n    }\n    return;\n  });\n\n  return filteredArr;\n};\n\nexport const comingSoon = (array, string, nb = 8) => {\n  let res = array.filter((el) => el.type === \"soon\" && el.original === \"\");\n  return res.slice(0, nb);\n};\n\nexport const originalsSeriesOnly = (array, nb = 8) => {\n  let res = array.filter(\n    (el) => el.original === \"original\" && el.type === \"serie\"\n  );\n  return res.slice(0, nb);\n};\n\nexport const originalsMoviesOnly = (array, nb = 8) => {\n  let res = array.filter(\n    (el) => el.original === \"original\" && el.type === \"movie\"\n  );\n  return res.slice(0, nb);\n};\n\nexport const comedySeriesOnly = (array, nb = 8) => {\n  let res = array.filter((el) => {\n    return (\n      el.genre.indexOf(\"Comedie\") !== -1 &&\n      el.type === \"serie\" &&\n      el.original === \"\"\n    );\n  });\n  console.log(res);\n  return res.slice(0, nb);\n};\n\nexport const quarantined = (array, nb = 8) => {\n  let res = array.filter(\n    (el) => el.quarantined === \"quarantined\" && el.original === \"\"\n  );\n  return res.slice(0, nb);\n};\n\nexport const animeSeriesOnly = (array, nb = 8) => {\n  let res = array.filter(\n    (el) =>\n      el.genre.indexOf(\"AnimÃ©\") !== -1 &&\n      el.type === \"serie\" &&\n      el.original === \"\"\n  );\n\n  return res.slice(0, nb);\n};\n\nexport const animationMoviesOnly = (array, nb = 8) => {\n  let res = array.filter(\n    (el) =>\n      el.genre.indexOf(\"Animation\") !== -1 &&\n      el.type === \"movie\" &&\n      el.original === \"\"\n  );\n\n  return res.slice(0, nb);\n};\n\nexport const actionMoviesOnly = (array, nb = 8) => {\n  let res = array.filter(\n    (el) => el.genre.indexOf(\"Action\") !== -1 && el.type === \"movie\"\n  );\n\n  return res.slice(0, nb);\n};\n"]},"metadata":{},"sourceType":"module"}