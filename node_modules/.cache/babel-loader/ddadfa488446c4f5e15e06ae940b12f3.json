{"ast":null,"code":"var _jsxFileName = \"/Users/bastpaq/Documents/semaines-intensives/cineo/cineo/src/components/player/contoller/buttons/full-sreen/fullScreen.component.jsx\";\nimport React from 'react';\nimport { PlayerContextConsumer } from '../../../player.context';\nexport default class FullScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handelClick = player => {\n      let playerElt = player.current;\n\n      if (this.state.isFullScreen) {\n        this.setState({\n          isFullScreen: false\n        });\n        document.exitFullscreen();\n      } else {\n        this.setState({\n          isFullScreen: true\n        });\n        playerElt.requestFullscreen();\n      }\n    };\n\n    this.state = {\n      isFullScreen: false\n    };\n  }\n\n  render() {\n    const {\n      isFullScreen\n    } = this.state;\n    return /*#__PURE__*/React.createElement(PlayerContextConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, ({\n      playerRef,\n      isPlayerFullScreen\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controler__full-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.handelClick(playerRef);\n        isPlayerFullScreen(!isFullScreen);\n      },\n      className: `${isFullScreen ? 'is-fullScreen' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      className: \"exit-fullscreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      className: \"go-fullscreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M20 3h2v6h-2V5h-4V3h4zM4 3h4v2H4v4H2V3h2zm16 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/bastpaq/Documents/semaines-intensives/cineo/cineo/src/components/player/contoller/buttons/full-sreen/fullScreen.component.jsx"],"names":["React","PlayerContextConsumer","FullScreen","Component","constructor","props","handelClick","player","playerElt","current","state","isFullScreen","setState","document","exitFullscreen","requestFullscreen","render","playerRef","isPlayerFullScreen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,WAPmB,GAOJC,MAAD,IAAY;AACxB,UAAIC,SAAS,GAAGD,MAAM,CAACE,OAAvB;;AACA,UAAI,KAAKC,KAAL,CAAWC,YAAf,EAA6B;AAC3B,aAAKC,QAAL,CAAc;AAAED,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACAE,QAAAA,QAAQ,CAACC,cAAT;AACD,OAHD,MAGO;AACL,aAAKF,QAAL,CAAc;AAAED,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACAH,QAAAA,SAAS,CAACO,iBAAV;AACD;AACF,KAhBkB;;AAEjB,SAAKL,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAaDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAmB,KAAKD,KAA9B;AACA,wBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEO,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAD,kBACC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKZ,WAAL,CAAiBW,SAAjB;AACAC,QAAAA,kBAAkB,CAAC,CAACP,YAAF,CAAlB;AACD,OAJH;AAKE,MAAA,SAAS,EAAG,GAAEA,YAAY,GAAG,eAAH,GAAqB,EAAG,EALpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAK,MAAA,OAAO,EAAC,WAAb;AAAyB,MAAA,SAAS,EAAC,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,CAAC,EAAC,+EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAUE;AAAK,MAAA,OAAO,EAAC,WAAb;AAAyB,MAAA,SAAS,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,CAAC,EAAC,oFAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CADF,CAFJ,CADF;AAsBD;;AA3CqD","sourcesContent":["import React from 'react';\nimport { PlayerContextConsumer } from '../../../player.context';\n\nexport default class FullScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFullScreen: false,\n    };\n  }\n\n  handelClick = (player) => {\n    let playerElt = player.current;\n    if (this.state.isFullScreen) {\n      this.setState({ isFullScreen: false });\n      document.exitFullscreen();\n    } else {\n      this.setState({ isFullScreen: true });\n      playerElt.requestFullscreen();\n    }\n  };\n\n  render() {\n    const { isFullScreen } = this.state;\n    return (\n      <PlayerContextConsumer>\n        {({ playerRef, isPlayerFullScreen }) => (\n          <div className='controler__full-screen'>\n            <button\n              onClick={() => {\n                this.handelClick(playerRef);\n                isPlayerFullScreen(!isFullScreen);\n              }}\n              className={`${isFullScreen ? 'is-fullScreen' : ''}`}\n            >\n              <svg viewBox='0 0 24 24' className='exit-fullscreen'>\n                <path d='M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z' />\n              </svg>\n              <svg viewBox='0 0 24 24' className='go-fullscreen'>\n                <path d='M20 3h2v6h-2V5h-4V3h4zM4 3h4v2H4v4H2V3h2zm16 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z' />\n              </svg>\n            </button>\n          </div>\n        )}\n      </PlayerContextConsumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}