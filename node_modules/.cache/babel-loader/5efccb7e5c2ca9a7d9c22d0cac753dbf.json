{"ast":null,"code":"var _jsxFileName = \"/Users/bastpaq/Documents/student_projects/semaines-intensives/cineo-bast/cineo/src/context/session.context.jsx\";\nimport React, { createContext, Component } from 'react';\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\nconst SessionContext = createContext({});\nexport class SessionContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connectionToApi = (file, data) => {\n      return fetch(`${this.state.apUrl}${file}`, {\n        method: 'POST',\n        body: JSON.stringify(data)\n      }).then(rep => rep.json());\n    };\n\n    this.signIn = (mail, password, e) => {\n      e.preventDefault();\n      let infosUsers = {};\n      infosUsers.mail = mail;\n      infosUsers.password = password;\n      this.connectionToApi('/signIn.php', infosUsers).then(data => {\n        if (data.success) {\n          let userLoged = { ...data.user\n          };\n          this.setState({\n            user: userLoged\n          });\n          localStorage.setItem('user', JSON.stringify(userLoged)); //get favorite movies\n\n          let userId = {};\n          userId.id = data.user.id;\n          this.connectionToApi('/getMoviesList.php', userId).then(data => {\n            console.log(data);\n\n            if (data.movies) {\n              let movieList = [];\n              data.movies.forEach(movie => {\n                movieList.push(parseInt(movie.id_movie));\n              });\n              this.setState({\n                movieList: movieList\n              });\n              localStorage.setItem('moviesList', JSON.stringify(movieList));\n            }\n          });\n        } else {\n          this.setState({\n            wrongLogin: true\n          });\n        }\n      });\n    };\n\n    this.signUp = (lastName, firstName, mail, password, pseudo, e) => {\n      e.preventDefault();\n      let data = {};\n      data.lastName = lastName;\n      data.firstName = firstName;\n      data.mail = mail;\n      data.password = password;\n      data.pseudo = pseudo;\n      this.connectionToApi('/signUp.php', data).then(data => {\n        if (data.mailExist) {\n          this.setState({\n            mailAlreadyExist: true\n          });\n        } else {\n          let userLoged = { ...data.user\n          };\n          this.setState({\n            user: userLoged\n          });\n          localStorage.setItem('user', JSON.stringify(userLoged));\n        }\n      });\n    };\n\n    this.changeWarningStates = () => {\n      this.setState({\n        mailAlreadyExist: false,\n        wrongLogin: false\n      });\n    };\n\n    this.deleteUser = () => {\n      this.setState({\n        user: null,\n        movieList: null\n      });\n      localStorage.removeItem('user');\n      localStorage.removeItem('moviesList');\n      /* let data = {};\n      data.mail = this.state.user.mail;\n       fetch('http://18.191.118.60:80/deleteUser.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({ user: null });\n          localStorage.removeItem('user');\n          localStorage.removeItem('moviesList');\n        }); */\n    };\n\n    this.logOut = () => {\n      this.setState({\n        user: null,\n        movieList: null\n      });\n      localStorage.removeItem('user');\n      localStorage.removeItem('moviesList');\n    };\n\n    this.addMovie = filmId => {\n      let data = {};\n      data.idUser = this.state.user.id;\n      data.idMovie = filmId;\n      this.connectionToApi('/addMovie.php', data).then(data => {\n        let movieList = [];\n        data.movies.forEach(movie => {\n          movieList.push(parseInt(movie.id_movie));\n        });\n        this.setState({\n          movieList: movieList\n        });\n        localStorage.setItem('moviesList', JSON.stringify(movieList));\n      });\n    };\n\n    this.deleteMovie = id_movie => {\n      let data = {};\n      data.movieId = id_movie;\n      data.userId = this.state.user.id;\n      this.connectionToApi('/deleteMovie.php', data).then(data => {\n        console.log(data);\n        let movieList = [];\n\n        if (data.movies !== null) {\n          data.movies.forEach(movie => {\n            movieList.push(parseInt(movie.id_movie));\n          });\n        }\n\n        this.setState({\n          movieList: movieList\n        });\n        localStorage.setItem('moviesList', JSON.stringify(movieList));\n      });\n    };\n\n    this.changePseudo = pseudo => {\n      /* const initialUser = JSON.parse(localStorage.getItem('user'));\n      initialUser.pseudo = pseudo;\n       localStorage.setItem('user', JSON.stringify(initialUser));\n      this.setState({ user: initialUser }); */\n      let data = {};\n      data.id = this.state.user.id;\n      data.pseudo = pseudo;\n      this.connectionToApi('/changePseudo.php', data).then(data => {\n        let userLoged = { ...data.user\n        };\n        this.setState({\n          user: userLoged\n        });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      });\n    };\n\n    this.changeLastName = lastName => {\n      let data = {};\n      data.id = this.state.user.id;\n      data.lastName = lastName;\n      this.connectionToApi('/changeLastName.php', data).then(data => {\n        let userLoged = { ...data.user\n        };\n        this.setState({\n          user: userLoged\n        });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      });\n    };\n\n    this.changeFirstName = firstName => {\n      let data = {};\n      data.id = this.state.user.id;\n      data.firstName = firstName;\n      this.connectionToApi('/changeFirstName.php', data).then(data => {\n        let userLoged = { ...data.user\n        };\n        this.setState({\n          user: userLoged\n        });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      });\n    };\n\n    this.changeMail = mail => {\n      const initialUser = JSON.parse(localStorage.getItem('user'));\n      initialUser.mail = mail;\n\n      if (/^[a-z0-9._-]+@[a-z0-9._-]+\\.[a-z]{2,6}$/i.test(mail)) {\n        localStorage.setItem('user', JSON.stringify(initialUser));\n        this.setState({\n          user: initialUser\n        });\n        this.setState({\n          isNewMailValid: true\n        });\n      } else {\n        this.setState({\n          isNewMailValid: false\n        });\n      }\n      /* let data = {};\n      data.id = this.state.user.id;\n      data.value = mail;\n       fetch('http://18.191.118.60:80/changeMail.php', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let userLoged = {\n            id: data[0].id,\n            name: data[0].name,\n            lastName: data[0].last_name,\n            pseudo: data[0].pseudo,\n            mail: data[0].mail,\n            signUpDate: data[0].date_inscription,\n          };\n          this.setState({ user: userLoged });\n          localStorage.setItem('user', JSON.stringify(userLoged));\n        }); */\n\n    };\n\n    this.state = {\n      user: null,\n      mailAlreadyExist: false,\n      wrongLogin: false,\n      movieList: null,\n      isNewMailValid: true,\n      apUrl: 'https://bastienpaquier.masselab.com'\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('user')) {\n      this.setState({\n        user: JSON.parse(localStorage.getItem('user'))\n      });\n    }\n\n    if (localStorage.getItem('moviesList')) {\n      this.setState({\n        movieList: JSON.parse(localStorage.getItem('moviesList'))\n      });\n    }\n  }\n\n  render() {\n    const value = { ...this.state,\n      signIn: this.signIn,\n      signUp: this.signUp,\n      changeWarningStates: this.changeWarningStates,\n      deleteUser: this.deleteUser,\n      logOut: this.logOut,\n      addMovie: this.addMovie,\n      deleteMovie: this.deleteMovie,\n      changePseudo: this.changePseudo,\n      changeLastName: this.changeLastName,\n      changeFirstName: this.changeFirstName,\n      changeMail: this.changeMail\n    };\n    return /*#__PURE__*/React.createElement(SessionContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nexport const SessionContextConsumer = SessionContext.Consumer;","map":{"version":3,"sources":["/Users/bastpaq/Documents/student_projects/semaines-intensives/cineo-bast/cineo/src/context/session.context.jsx"],"names":["React","createContext","Component","findRenderedDOMComponentWithClass","SessionContext","SessionContextProvider","constructor","props","connectionToApi","file","data","fetch","state","apUrl","method","body","JSON","stringify","then","rep","json","signIn","mail","password","e","preventDefault","infosUsers","success","userLoged","user","setState","localStorage","setItem","userId","id","console","log","movies","movieList","forEach","movie","push","parseInt","id_movie","wrongLogin","signUp","lastName","firstName","pseudo","mailExist","mailAlreadyExist","changeWarningStates","deleteUser","removeItem","logOut","addMovie","filmId","idUser","idMovie","deleteMovie","movieId","changePseudo","changeLastName","changeFirstName","changeMail","initialUser","parse","getItem","test","isNewMailValid","componentDidMount","render","value","children","SessionContextConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { createContext, Component } from 'react';\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\n\nconst SessionContext = createContext({});\n\nexport class SessionContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      mailAlreadyExist: false,\n      wrongLogin: false,\n      movieList: null,\n      isNewMailValid: true,\n      apUrl: 'https://bastienpaquier.masselab.com',\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('user')) {\n      this.setState({ user: JSON.parse(localStorage.getItem('user')) });\n    }\n    if (localStorage.getItem('moviesList')) {\n      this.setState({\n        movieList: JSON.parse(localStorage.getItem('moviesList')),\n      });\n    }\n  }\n\n  connectionToApi = (file, data) => {\n    return fetch(`${this.state.apUrl}${file}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }).then((rep) => rep.json());\n  };\n\n  signIn = (mail, password, e) => {\n    e.preventDefault();\n\n    let infosUsers = {};\n    infosUsers.mail = mail;\n    infosUsers.password = password;\n\n    this.connectionToApi('/signIn.php', infosUsers).then((data) => {\n      if (data.success) {\n        let userLoged = { ...data.user };\n\n        this.setState({ user: userLoged });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n\n        //get favorite movies\n        let userId = {};\n        userId.id = data.user.id;\n        this.connectionToApi('/getMoviesList.php', userId).then((data) => {\n          console.log(data);\n          if (data.movies) {\n            let movieList = [];\n            data.movies.forEach((movie) => {\n              movieList.push(parseInt(movie.id_movie));\n            });\n            this.setState({ movieList: movieList });\n            localStorage.setItem('moviesList', JSON.stringify(movieList));\n          }\n        });\n      } else {\n        this.setState({ wrongLogin: true });\n      }\n    });\n  };\n\n  signUp = (lastName, firstName, mail, password, pseudo, e) => {\n    e.preventDefault();\n\n    let data = {};\n\n    data.lastName = lastName;\n    data.firstName = firstName;\n    data.mail = mail;\n    data.password = password;\n    data.pseudo = pseudo;\n\n    this.connectionToApi('/signUp.php', data).then((data) => {\n      if (data.mailExist) {\n        this.setState({ mailAlreadyExist: true });\n      } else {\n        let userLoged = { ...data.user };\n        this.setState({ user: userLoged });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      }\n    });\n  };\n\n  changeWarningStates = () => {\n    this.setState({ mailAlreadyExist: false, wrongLogin: false });\n  };\n\n  deleteUser = () => {\n    this.setState({ user: null, movieList: null });\n    localStorage.removeItem('user');\n    localStorage.removeItem('moviesList');\n\n    /* let data = {};\n    data.mail = this.state.user.mail;\n\n    fetch('http://18.191.118.60:80/deleteUser.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ user: null });\n        localStorage.removeItem('user');\n        localStorage.removeItem('moviesList');\n      }); */\n  };\n\n  logOut = () => {\n    this.setState({ user: null, movieList: null });\n    localStorage.removeItem('user');\n    localStorage.removeItem('moviesList');\n  };\n\n  addMovie = (filmId) => {\n    let data = {};\n    data.idUser = this.state.user.id;\n    data.idMovie = filmId;\n\n    this.connectionToApi('/addMovie.php', data).then((data) => {\n      let movieList = [];\n      data.movies.forEach((movie) => {\n        movieList.push(parseInt(movie.id_movie));\n      });\n      this.setState({ movieList: movieList });\n      localStorage.setItem('moviesList', JSON.stringify(movieList));\n    });\n  };\n\n  deleteMovie = (id_movie) => {\n    let data = {};\n    data.movieId = id_movie;\n    data.userId = this.state.user.id;\n    this.connectionToApi('/deleteMovie.php', data).then((data) => {\n      console.log(data);\n      let movieList = [];\n      if (data.movies !== null) {\n        data.movies.forEach((movie) => {\n          movieList.push(parseInt(movie.id_movie));\n        });\n      }\n      this.setState({ movieList: movieList });\n      localStorage.setItem('moviesList', JSON.stringify(movieList));\n    });\n  };\n\n  changePseudo = (pseudo) => {\n    /* const initialUser = JSON.parse(localStorage.getItem('user'));\n    initialUser.pseudo = pseudo;\n\n    localStorage.setItem('user', JSON.stringify(initialUser));\n    this.setState({ user: initialUser }); */\n    let data = {};\n    data.id = this.state.user.id;\n    data.pseudo = pseudo;\n\n    this.connectionToApi('/changePseudo.php', data).then((data) => {\n      let userLoged = { ...data.user };\n      this.setState({ user: userLoged });\n      localStorage.setItem('user', JSON.stringify(userLoged));\n    });\n  };\n\n  changeLastName = (lastName) => {\n    let data = {};\n    data.id = this.state.user.id;\n    data.lastName = lastName;\n\n    this.connectionToApi('/changeLastName.php', data).then((data) => {\n      let userLoged = { ...data.user };\n      this.setState({ user: userLoged });\n      localStorage.setItem('user', JSON.stringify(userLoged));\n    });\n  };\n\n  changeFirstName = (firstName) => {\n    let data = {};\n    data.id = this.state.user.id;\n    data.firstName = firstName;\n\n    this.connectionToApi('/changeFirstName.php', data).then((data) => {\n      let userLoged = { ...data.user };\n      this.setState({ user: userLoged });\n      localStorage.setItem('user', JSON.stringify(userLoged));\n    });\n  };\n\n  changeMail = (mail) => {\n    const initialUser = JSON.parse(localStorage.getItem('user'));\n    initialUser.mail = mail;\n\n    if (/^[a-z0-9._-]+@[a-z0-9._-]+\\.[a-z]{2,6}$/i.test(mail)) {\n      localStorage.setItem('user', JSON.stringify(initialUser));\n      this.setState({ user: initialUser });\n\n      this.setState({ isNewMailValid: true });\n    } else {\n      this.setState({ isNewMailValid: false });\n    }\n    /* let data = {};\n    data.id = this.state.user.id;\n    data.value = mail;\n\n    fetch('http://18.191.118.60:80/changeMail.php', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let userLoged = {\n          id: data[0].id,\n          name: data[0].name,\n          lastName: data[0].last_name,\n          pseudo: data[0].pseudo,\n          mail: data[0].mail,\n          signUpDate: data[0].date_inscription,\n        };\n        this.setState({ user: userLoged });\n        localStorage.setItem('user', JSON.stringify(userLoged));\n      }); */\n  };\n\n  render() {\n    const value = {\n      ...this.state,\n      signIn: this.signIn,\n      signUp: this.signUp,\n      changeWarningStates: this.changeWarningStates,\n      deleteUser: this.deleteUser,\n      logOut: this.logOut,\n      addMovie: this.addMovie,\n      deleteMovie: this.deleteMovie,\n      changePseudo: this.changePseudo,\n      changeLastName: this.changeLastName,\n      changeFirstName: this.changeFirstName,\n      changeMail: this.changeMail,\n    };\n\n    return (\n      <SessionContext.Provider value={value}>\n        {this.props.children}\n      </SessionContext.Provider>\n    );\n  }\n}\n\nexport const SessionContextConsumer = SessionContext.Consumer;\n"]},"metadata":{},"sourceType":"module"}